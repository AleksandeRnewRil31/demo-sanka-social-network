{"version":3,"file":"static/js/522.b4863457.chunk.js","mappings":"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","sources":["webpack://first-project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://first-project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://first-project/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/MyPosts/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__KXjxL\",\"imageUrl\":\"ProfileInfo_imageUrl__RV+t6\",\"mainPhoto\":\"ProfileInfo_mainPhoto__TwHRY\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\"\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo; ","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__efBuX\",\"posts\":\"MyPosts_posts__1h0IJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__bVYT6\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n        <div className={s.item}>\r\n          <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSt9PYsFH3vxHAL1zj86lo5dncKY2IkHIGEqA&usqp=CAU\"></img>\r\n          { props.message }\r\n          <div>\r\n          <span>\r\n            { props.likesCount }\r\n          </span>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Post; ","import { Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\nconsole.log(\"skdjksdjfbjk\");\r\n  let postsElements =\r\n    props.posts.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount} />)\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n      <AddNewPostForm onAddPost={onAddPost}/>\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AddNewPostForm(props) {\r\n  return (\r\n      <div>\r\n          <Formik\r\n              initialValues={{\r\n                newPostText: \"\"\r\n              }}\r\n              validateOnBlur\r\n              onSubmit={props.onAddPost} \r\n              // handleSubmit\r\n              \r\n          // validationSchema={validationsSchema}\r\n          >\r\n\r\n              {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty }) => (\r\n                  <div>\r\n                      <textarea placeholder={\"Enter your post\"}\r\n                          name={\"newPostText\"}\r\n                          type={\"text\"}\r\n                          onChange={handleChange}\r\n                          value={values.newMessageBody}\r\n                          onBlur={handleBlur} />\r\n                      {touched.newPostElement && errors.newPostElement && <p>{errors.newPostElement}</p>}\r\n                      <div>\r\n\r\n                          <button\r\n                              name={\"onAddPost\"}\r\n                              type={\"submit\"}\r\n                              disabled={!isValid && !dirty}\r\n                              onClick={handleSubmit}\r\n                          >Add post</button>\r\n                      </div>\r\n                  </div>\r\n              )\r\n              }\r\n          </Formik>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default MyPosts; ","import React from \"react\";\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer; ","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile; \r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"../Profile\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n            // userId = 2;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        // setTimeout(() => {\r\n        this.props.getStatus(userId);\r\n        // }, 1000\r\n        // );\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","className","s","src","photos","large","userPhoto","Preloader","message","likesCount","AddNewPostForm","initialValues","newPostText","validateOnBlur","onSubmit","onAddPost","values","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","placeholder","name","type","newMessageBody","newPostElement","disabled","onClick","console","log","postsElements","posts","map","p","id","addPost","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","compose","auth","isAuth","withRouter"],"sourceRoot":""}